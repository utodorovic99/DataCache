///////////////////////////////////////////////////////////
//  ConsumptionService.cs
//  Implementation of the Class ConsumptionService
//  Generated by Enterprise Architect
//  Created on:      07-May-2021 2:59:25 PM
//  Original author: Ugljesa
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Common_Project.Classes;

public class ConsumptionService {

	private IConsumptionDAO m_IConsumptionDAO = new ConsumptionDAOImpl();

	public ConsumptionService(){

	}

	~ConsumptionService(){

	}

	/// 
	/// <param name="countryID"></param>
	public List<ConsumptionRecord> HandleGetByCountry(string countryID) { 
		return m_IConsumptionDAO.FindByCountry(countryID);
	}

	public List<ConsumptionRecord> HandleGetByCountryAndDate(string countryID, string targetTimestamp){
		return m_IConsumptionDAO.FindByCountryAndDate(countryID, targetTimestamp);
	}

	/// 
	/// <param name="from"></param>
	/// <param name="till"></param>
	public List<ConsumptionRecord> HandleGetByCountryAndDatespan(string gID, string fromTimestamp, string tillTimestamp){
		return m_IConsumptionDAO.FindByCountryAndDatespan(gID, fromTimestamp, tillTimestamp);
	}

	public List<ConsumptionRecord> HandleGetByGeographyAndAfterDate(string gID, string from){
		return m_IConsumptionDAO.FindByGeographyAndAfterDate(gID, from);
	}

	public List<ConsumptionRecord> HandleGetByGeographyAndBeforeDate(string targetGID, string targetTimestamp){
		return m_IConsumptionDAO.FindByGeographyAndBeforeDate(targetGID, targetTimestamp);
    }

	/// 
	/// <param name="consumptionRecords"></param>
	public ConsumptionUpdate HandleStoreConsumption(List<ConsumptionRecord> consumptionRecords)
	{
		return m_IConsumptionDAO.StoreConsumption(consumptionRecords);
	}

	public ConsumptionUpdate HandleStoreConsumption(ConsumptionRecord consumptionRecords)
	{
		return m_IConsumptionDAO.StoreConsumption(consumptionRecords);
	}

	public List<ConsumptionRecord> HandleFindConsumptionAll()
	{
		return (List<ConsumptionRecord>)m_IConsumptionDAO.FindAll();
	}

	public List<ConsumptionRecord> HandleFindAllByCID(IEnumerable<string> keys)
    {
		return (List<ConsumptionRecord>)m_IConsumptionDAO.FindAllById(keys);
	}

	public ConsumptionRecord HandleFindSingleByCID(string key)
    {
		return m_IConsumptionDAO.FindById(key);
    }

	public int HandleCount()
	{
		return m_IConsumptionDAO.Count();
	}

	public bool HandleExistsByContent(ConsumptionRecord target)
    {
		return m_IConsumptionDAO.ExistsByContent(target);

	}

	public bool HandleExistsByCID(string key)
    {
		return m_IConsumptionDAO.ExistsById(key);
    }

	public void HandleDeleteByContent(ConsumptionRecord target)
    {
		 m_IConsumptionDAO.Delete(target);
    }

	public void HandleDeleteByCID(string cID)
    {
		m_IConsumptionDAO.DeleteById(cID);
    }

	public void HandleDeleteAll()
	{
		m_IConsumptionDAO.DeleteAll();
	}

}//end ConsumptionService
///////////////////////////////////////////////////////////
//  AuditService.cs
//  Implementation of the Class AuditService
//  Generated by Enterprise Architect
//  Created on:      07-May-2021 2:59:24 PM
//  Original author: Ugljesa
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Common_Project;
using Common_Project.Classes;

public class AuditService {

	private IAuditDAO m_IAuditDAO;

	public AuditService()
    {
        m_IAuditDAO = new AuditDAOImpl();
	} 
	~AuditService(){

	}

    public List<AuditRecord> HandleShowAll()
    {
        return m_IAuditDAO.FindAll() as List<AuditRecord>;
    }

    public int HandleCount()
    {
        return m_IAuditDAO.Count();
    }

    public List<AuditRecord> HandleShowMultipleByAid(List<string> keys)
    {
        return m_IAuditDAO.FindAllById(keys) as List<AuditRecord>;
    }

    public bool HandleExistsByAID(string id)
    {
        return m_IAuditDAO.ExistsById(id);
    }

    public List<AuditRecord> HandleShowDuplicatesAll()
    {
        return m_IAuditDAO.DuplicatesAll() as List<AuditRecord>;
    }
    public List<AuditRecord> HandleShowDuplicatesAllByGeo(string gID)
    {
        return m_IAuditDAO.DuplicatesAllByGeo(gID) as List<AuditRecord>;
    }
    public List<AuditRecord> HandleShowMissesAll()
    {
        return m_IAuditDAO.MissesAll() as List<AuditRecord>;
    }
    public List<AuditRecord> HandleShowMissesAllByGeo(string gID)
    {
        return m_IAuditDAO.MissesAllByGeo(gID) as List<AuditRecord>;
    }

    public List<AuditRecord> HandleShowDupsAndMissesByGeo(string gID)
    {
        return m_IAuditDAO.DupsAndMissesByGeo(gID) as List<AuditRecord>;
    }

}//end AuditService